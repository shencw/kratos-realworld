syntax = "proto3";
package kratos.api;

option go_package = "github.com/shencw/kratos-realworld/internal/conf;conf";

import "google/protobuf/duration.proto";
import "google/protobuf/any.proto";

message Bootstrap {
  Server  server = 1;
  Data    data = 2;
  Apollo  apollo = 3;
}

message Server {
  string env = 1;
  string name = 2;
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 3;
  GRPC grpc = 4;
}

message Data {
  message Database {
    string realworld = 1;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  message Hive {
    message Configuration {
      string username = 1;
      string password = 2;
      string database = 3;
    }
    string        host = 1;
    int32         port = 2;
    string        auth = 3;
    Configuration configuration = 4;
  }
  message Kafka {
    repeated string address = 1;
    string topic = 2;
    google.protobuf.Any partition = 3;
    google.protobuf.Any network = 4;
  }
  Database  database = 1;
  Redis     redis = 2;
  Hive      hive = 3;
  Kafka     kafka = 4;
}

message Apollo {
  string app_id = 1;
  string cluster = 2;
  string end_point = 3;
  string namespace = 4;
  string secret = 5;
}
